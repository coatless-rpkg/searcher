% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_func.R
\name{search_site}
\alias{search_site}
\alias{search_error}
\alias{search_google}
\alias{search_bing}
\alias{search_duckduckgo}
\alias{search_stackoverflow}
\alias{search_github}
\alias{search_bitbucket}
\title{Search a Message Using a Search Engine}
\usage{
search_site(site, query, rlang = TRUE)

search_error(site, query = geterrmessage())

search_google(query = geterrmessage())

search_bing(query = geterrmessage())

search_duckduckgo(query = geterrmessage())

search_stackoverflow(query = geterrmessage(), rlang = TRUE)

search_github(query = geterrmessage(), rlang = TRUE)

search_bitbucket(query = geterrmessage(), rlang = TRUE)
}
\arguments{
\item{site}{Name of site to search on. Supported options:
`"google"` (default), `"stackoverflow"`, `"github"`, `"bing"`,
`"bitbucket"`}

\item{query}{Contents of string to search. Default is the error message.}

\item{rlang}{Search for results written in R. Default is `TRUE`}
}
\description{
Searches message using a search engine.
}
\section{Generic Error Search}{

The `search_error` function grabs the last error message and
tries to search it. This function will ensure that R language
is the primary search context.
}

\section{Google Search}{

The `search_google` function searches [Google](https://google.com) using:
`https://google.com/search?q=<Error>`
See <https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters>
for details.
}

\section{Bing Search}{

The `search_bing` function searches [Bing](https://bing.com) using:
`https://bing.com/search?q=<Error>`
}

\section{DuckDuckGo Search}{

The `search_duckduckgo` function searches [DuckDuckGo](https://duckduckgo.com) using:
`https://duckduckgo.com/?q=<Error>`
}

\section{StackOverflow Search}{

The `search_stackoverflow` function searches [StackOverflow](https://stackoverflow.com) using:
`https://stackoverflow.com/search?q=%5Br%5D+<Error>`
See <https://stackoverflow.com/help/advanced-search-parameters-jobs>
}

\section{GitHub Search}{

The `search_github` function searches [GitHub](https://github.com) using:
 `https://github.com/search?q=<Error>+language%3Ar+type%3Aissue&type=Issues`
See <https://help.github.com/categories/searching-for-information-on-github/>
and <https://help.github.com/articles/searching-code/>
}

\section{BitBucket Search}{

The `search_bitbucket` function searches [BitBucket](https://bitbucket.com) using:
`https://bitbucket.com/search?q=lang%3Ar+<Error>`
See <https://confluence.atlassian.com/bitbucket/code-search-in-bitbucket-873876782.html>
}

\examples{
\dontrun{
# On error, automatically search the message on google
options(error = search_google)

# Search in a generic way
search_site("google", "r-project")

# Search Google
search_google("r-project")

# Search Bing
search_bing("Microsoft R")

# Search DuckDuckGo
search_duckduckgo("R language")

# Search StackOverflow for Convolutions in the r tag
search_stackoverflow("convolutions")

# Search all languages on StackOverflow for convolutions
search_stackoverflow("convolutions", rlang = FALSE)

# Search GitHub Issues for bivariate normal in the language:r
search_github("bivariate normal")

# Search all languages on GitHub Issues for bivariate normal
search_github("bivariate normal", rlang = FALSE)

# Search BitBucket for assertions
search_bitbucket("assertions")
}
}
\seealso{
[search_google], [search_stackoverflow], [search_github],
         [search_bing], [search_bitbucket], [search_error], [open_browser]
}
