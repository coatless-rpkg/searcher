% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ai-search-functions.R
\name{ask_chatgpt}
\alias{ask_chatgpt}
\alias{ask_claude}
\alias{ask_perplexity}
\alias{ask_mistral}
\alias{ask_bing_copilot}
\alias{ask_copilot}
\alias{ask_meta_ai}
\title{Search Generative AI Services from R}
\usage{
ask_chatgpt(query = geterrmessage(), prompt = NULL)

ask_claude(query = geterrmessage(), prompt = NULL)

ask_perplexity(query = geterrmessage(), prompt = NULL)

ask_mistral(query = geterrmessage(), prompt = NULL)

ask_bing_copilot(query = geterrmessage(), prompt = NULL)

ask_copilot(query = geterrmessage(), prompt = NULL)

ask_meta_ai(query = geterrmessage(), prompt = NULL)
}
\arguments{
\item{query}{Contents of string to send to the AI. Default is the last error message.}

\item{prompt}{Optional prompt prefix to add before your query to guide how the AI
responds. If NULL, uses the service-specific default prompt option.}
}
\value{
The generated search URL or an empty string.
}
\description{
Opens a browser to query various generative AI assistants directly from R.
These functions allow you to ask questions, get code help, or search for information
using popular AI services.
}
\section{ChatGPT Search}{

The \code{ask_chatgpt()} function opens a browser with OpenAI's ChatGPT interface and your query using:
\verb{https://chat.openai.com/?model=auto&q=<query>}

You can customize the AI's behavior by setting a prompt prefix through:
\enumerate{
\item The \code{prompt} parameter for per-call customization
\item The \code{options(searcher.chatgpt_prompt = "...")} setting for persistent customization
}
}

\section{Claude Search}{

The \code{ask_claude()} function opens Anthropic's Claude AI assistant with your query using:
\verb{https://claude.ai/new?q=<query>}

Claude can be directed to respond in specific ways by using the prompt parameter or by
setting a default prompt via \code{options()}.
}

\section{Perplexity Search}{

The \code{ask_perplexity()} function searches with Perplexity AI using:
\verb{https://www.perplexity.ai/search?q=<query>&focus=internet&copilot=false}

Perplexity AI provides answers with citations to sources, making it particularly
useful for research-oriented queries.
}

\section{Mistral Search}{

The \code{ask_mistral()} function launches Mistral AI with your query using:
\verb{https://chat.mistral.ai/chat?q=<query>}

The default prompt can be customized through the \code{searcher.mistral_prompt} option.
}

\section{Bing Copilot Search}{

The \code{ask_bing_copilot()} and \code{search_copilot()} functions both search
Microsoft Bing Copilot using:
\verb{https://www.bing.com/search?showconv=1&sendquery=1&q=<query>}

Bing Copilot combines search results with AI-generated responses, making it
useful for queries that benefit from web information.
}

\section{Meta AI Search}{

The \code{ask_meta_ai()} function searches Meta AI using:
\verb{https://www.meta.ai/?q=<query>}

Meta AI provides general-purpose AI assistance with a focus on conversational
responses.
}

\examples{
\dontrun{
# Basic AI queries
ask_chatgpt("How to join two dataframes in R?")
ask_claude("Explain what purrr::map_df does")
ask_perplexity("Compare dplyr vs data.table")

# Using custom prompts
ask_mistral("Find bug: ggplot(mtcars, aes(x=mpg, y=hp) + geom_point()",
             prompt = "Debug this code step by step:")

# Searching the last error
tryCatch(
  median("not a number"),
  error = function(e) ask_chatgpt()
)

# Setting default prompts
options(
  searcher.chatgpt_prompt = "You are an R viz expert. Help with:",
  searcher.claude_prompt = "As an R statistics expert, answer:"
)
}

}
\seealso{
\code{\link[=search_site]{search_site()}}
}
